name: "project beta automations"
description: 'This automation provides the ability to automate issues and pull requests related to Github Projects (Beta). If the issue or pull request is not attached to a project, it is automatically added to the project and its desired column. In addition to status automation, this automation also supports custom field management.'
inputs:
  gh_token:
    description: 'Permission token that grants permission to the GitHub API. (Toke or App config is required)'
    required: false
    default: ""
  gh_app_secret_key:
    description: 'Github App secret RSA key used to sign App JWT tokens'
    required: false
    default: ""
  gh_app_ID:
    description: 'Github App ID used to authenticate againts the API'
    required: false
    default: ""
  gh_app_installation_ID:
    description: 'Github App installation ID used to retrive installation token'
    required: false
    default: ""
  organization:
    description: 'Organization the project is stored in'
    required: false
    default: ""
  user:
    description: 'User the project is stored in'
    required: false
    default: ""
  project_id:
    description: 'Project ID owned by the organization'
    required: true
    default: ""
  resource_node_id:
    description: 'Defines the global node ID of the GitHub issue or pull request'
    required: true
    default: ""
  status_value:
    description: 'Specifies the destination card to which the issue or pull request should be moved. The value must be of type string. Example: "Todo"'
    required: false
    default: ""
  operation_mode:
    description: |
      Specifies the operation mode. 
      The value must be of type string.
      The value can be one of the following:
      - custom_field
      - status
    required: false
    default: "status"
  custom_field_values:
    description: |
      Specifies the custom field values to be set on the issue or pull request. 
      The value must be an array of objects. 
      Example: '[{\"name\": \"Priority\",\"type\": \"text\",\"value\": \"uuid1\"},{\"name\": \"Severity\",\"type\": \"text\",\"value\": \"uuid2\"},{\"name\": \"Number\",\"type\": \"number\",\"value\": \"100\"},{\"name\": \"Date\",\"type\": \"date\",\"value\": \"2022-01-28T20:02:27.306+01:00\"},{\"name\": \"Single Select\",\"type\": \"single_select\",\"value\": \"Option 1\"},{\"name\": \"Iteration\",\"type\": \"iteration\",\"value\": \"Iteration 1\"}]'
    required: false
branding:
  icon: 'terminal'
  color: 'blue'
runs:
  using: "composite"
  steps:
    - name: "Install the gh cli tool if not installed"
      shell: bash
      run: ${{ github.action_path }}/deps.sh

    - name: "Error missing auth conf"
      if: inputs.gh_app_secret_key == '' && inputs.gh_app_ID == '' && inputs.gh_token == ''
      shell: bash
      run: echo "No GH Auth method configured, provide PAT or App ID/Key"; exit 1

    - name: "Authenticate gh cli Github App"
      if: inputs.gh_app_secret_key != '' && inputs.gh_app_ID != '' && inputs.gh_app_installation_ID
      shell: bash
      run: "${{ github.action_path }}/gh_app_credential_helper.sh \"${{ inputs.gh_app_secret_key }}\" \"${{ inputs.gh_app_ID }}\" \"${{ inputs.gh_app_installation_ID }}\" | gh auth login --with-token"

    - name: "Authenticate gh cli PAT"
      if: inputs.gh_token != ''
      shell: bash
      run: echo "${{ inputs.gh_token }}" | gh auth login --with-token

    - name: "Check if User or Organization is set"
      if: inputs.organization == '' && inputs.user == ''
      uses: actions/github-script@v3
      with:
        script: |
          core.setFailed('either user or organization is not specified.')

    - name: "Check if User and Organization are set"
      if: inputs.organization != '' && inputs.user != ''
      uses: actions/github-script@v3
      with:
        script: |
          core.setFailed('user and organization field is set. Only one is supported.')

    - name: "Check if operation_mode is set and custom_field_values is not null"
      if: inputs.operation_mode == 'custom_field' && inputs.custom_field_values == ''
      uses: actions/github-script@v3
      with:
        script: |
          core.setFailed('operation mode is set to custom_field but custom_field_values is not set.')

    # execute organization script
    - name: Execute Status Organization automation
      if: inputs.organization != '' && inputs.operation_mode == 'status'
      working-directory: ${{ github.action_path }}
      env:
        GITHUB_TOKEN: ${{ inputs.gh_token }}
      shell: bash
      run: "${{ github.action_path }}/entrypoint.sh \"organization\" \"status\" \"${{ inputs.organization }}\" \"${{ inputs.project_id }}\" \"${{ inputs.resource_node_id }}\" \"${{ inputs.status_value }}\""

    - name: Execute Custom Field Organization automation
      if: inputs.organization != '' && inputs.operation_mode == 'custom_field'
      working-directory: ${{ github.action_path }}
      env:
        GITHUB_TOKEN: ${{ inputs.gh_token }}
      shell: bash
      run: "${{ github.action_path }}/entrypoint.sh \"organization\" \"custom_field\" \"${{ inputs.organization }}\" \"${{ inputs.project_id }}\" \"${{ inputs.resource_node_id }}\" \"${{ inputs.custom_field_values }}\""

    # execute user script
    - name: Execute Status User automation
      if: inputs.user != '' && inputs.operation_mode == 'status'
      working-directory: ${{ github.action_path }}
      env:
        GITHUB_TOKEN: ${{ inputs.gh_token }}
      shell: bash
      run: "${{ github.action_path }}/entrypoint.sh \"user\" \"status\" \"${{ inputs.user }}\" \"${{ inputs.project_id }}\" \"${{ inputs.resource_node_id }}\" \"${{ inputs.status_value }}\""

    - name: Execute Custom Field User automation
      if: inputs.user != '' && inputs.operation_mode == 'custom_field'
      working-directory: ${{ github.action_path }}
      env:
        GITHUB_TOKEN: ${{ inputs.gh_token }}
      shell: bash
      run: "${{ github.action_path }}/entrypoint.sh \"user\" \"custom_field\" \"${{ inputs.user }}\" \"${{ inputs.project_id }}\" \"${{ inputs.resource_node_id }}\" \"${{ inputs.custom_field_values }}\""
